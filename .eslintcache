<<<<<<< HEAD
[{"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/index.tsx":"1","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/App.tsx":"2","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/pages/clustermap.js":"3","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/pages/LoginPage.tsx":"4","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/pages/NotFoundPage.tsx":"5","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/pages/FiliationPage.tsx":"6","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/firebase/config.tsx":"7","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/classes/User.tsx":"8","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/components/NavBar.tsx":"9","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/components/FilteredUsersTable.tsx":"10","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/components/FilterUsers.tsx":"11","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/components/ContactsTable.tsx":"12"},{"size":204,"mtime":1622750746056,"results":"13","hashOfConfig":"14"},{"size":767,"mtime":1622750746045,"results":"15","hashOfConfig":"14"},{"size":4800,"mtime":1623141903228,"results":"16","hashOfConfig":"14"},{"size":3209,"mtime":1622750746058,"results":"17","hashOfConfig":"14"},{"size":160,"mtime":1622750746059,"results":"18","hashOfConfig":"14"},{"size":1382,"mtime":1623022139687,"results":"19","hashOfConfig":"14"},{"size":772,"mtime":1622750746056,"results":"20","hashOfConfig":"14"},{"size":2495,"mtime":1622750746045,"results":"21","hashOfConfig":"14"},{"size":1579,"mtime":1623016328696,"results":"22","hashOfConfig":"14"},{"size":3535,"mtime":1623020637190,"results":"23","hashOfConfig":"14"},{"size":3006,"mtime":1622750752151,"results":"24","hashOfConfig":"14"},{"size":7766,"mtime":1623019591700,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"etyjnz",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/index.tsx",[],"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/App.tsx",[],"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/pages/clustermap.js",["54","55"],"import React, { useState, useRef, useEffect } from \"react\";\n//import useSwr from \"swr\";\nimport GoogleMapReact from \"google-map-react\";\nimport useSupercluster from \"use-supercluster\";\nimport {db} from \"../firebase/config\"\nimport {User} from \"../classes/User\";\nimport \"../App.css\";\n\n\n\nconst fetcher = (...args) => fetch(...args).then(response => response.json());\n\nconst Marker = ({ children }) => children;\n\nexport default function DemoApp() {\n    const mapRef = useRef();\n    const [bounds, setBounds] = useState(null);\n    const [zoom, setZoom] = useState(10);\n    const [locations, setLocations] = useState([]);\n    useEffect( ()=>{\n        db.collection(\"Users\").get().then((querySnapshot) => {\n\n            const usersData = [];\n            querySnapshot.forEach((doc) => {\n                usersData.push({...doc.data(), id : doc.id})\n                // doc.data() is never undefined for query doc snapshot\n\n            });\n\n            setLocations(usersData);\n        });\n    },[])\n\n\n    const points = locations.map(user => ({\n        type: \"Feature\",\n        properties: { cluster: false, userId: user.id },\n        geometry: {\n            type: \"Point\",\n            coordinates: [\n                parseFloat(user.locations[user.locations.length-1].latitude),\n                parseFloat(user.locations[user.locations.length-1].longitude)\n            ]\n        }\n    }));\n    const { clusters, supercluster } = useSupercluster({\n        points,\n        bounds,\n        zoom,\n        options: { radius: 75, maxZoom: 20 }\n    });\n\n    return (\n        <div style={{ height: \"100vh\", width: \"100%\" }}>\n            <GoogleMapReact\n                bootstrapURLKeys={{\n                    key: 'AIzaSyA8nuKxeUQFlX2JEg_7NjQd1kUKs4r0LII',\n                }}\n                //googleMapURL={\"https://maps.googleapis.com/maps/api/js?key=AIzaSyA8nuKxeUQFlX2JEg_7NjQd1kUKs4r0LII&callback=initMap\"}\n                //googleMapURL={\"http://maps.googleapis.com/\"}\n                defaultCenter={{ lat: 39.891480 , lng: 32.785450 }}\n                defaultZoom={11}\n                //mapId={'a2f90edf59fbd576'}\n                yesIWantToUseGoogleMapApiInternals\n                onGoogleApiLoaded={({ map }) => {\n                    mapRef.current = map;\n                }}\n                onChange={({ zoom, bounds }) => {\n                    setZoom(zoom);\n                    setBounds([\n                        bounds.nw.lng,\n                        bounds.se.lat,\n                        bounds.se.lng,\n                        bounds.nw.lat\n                    ]);\n                }}\n            >\n                {clusters.map(cluster => {\n                    const [longitude, latitude] = cluster.geometry.coordinates;\n                    const {\n                        cluster: isCluster,\n                        point_count: pointCount\n                    } = cluster.properties;\n\n                    if (isCluster) {\n                        return (\n                            <Marker\n                                key={locations.id}\n                                lat={latitude}\n                                lng={longitude}\n                            >\n                                <div\n                                    className=\"cluster-marker\"\n                                    style={{\n                                        width: `${10 + (pointCount / points.length) * 20}px`,\n                                        height: `${10 + (pointCount / points.length) * 20}px`\n                                    }}\n                                    onClick={() => {\n                                        const expansionZoom = Math.min(\n                                            supercluster.getClusterExpansionZoom(cluster.id),\n                                            20\n                                        );\n                                        mapRef.current.setZoom(expansionZoom);\n                                        mapRef.current.panTo({ lat: latitude, lng: longitude });\n                                    }}\n                                >\n                                    {pointCount}\n                                </div>\n                            </Marker>\n                        );\n                    }\n\n                    return (\n                        <Marker\n                            key={locations.id}\n                            lat={latitude}\n                            lng={longitude}\n                        >\n                            <button className=\"user-locations\">\n                                <img src=\"/mark.png\" alt=\"user-locations\" />\n                            </button>\n                        </Marker>\n                    );\n                })}\n            </GoogleMapReact>\n        </div>\n    );\n}\n","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/pages/LoginPage.tsx",[],"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/pages/NotFoundPage.tsx",[],"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/pages/FiliationPage.tsx",["56","57"],"import FilteredUsersTable from \"../components/FilteredUsersTable\";\nimport React from \"react\";\nimport {db} from \"../firebase/config\"\nimport {FilterUsers} from \"../components/FilterUsers\";\nimport Nav from \"../components/NavBar\";\nimport * as datas from \"../data/mock_data.json\";\n\nfunction FiliationPage() {\n    /*function saveDatas(){\n        datas.users.map(user=>{\n            db.collection(\"users\").doc(user.email).set({\n                name: user.first_name,\n                surname: user.last_name,\n                email: user.email,\n                isRisky: false,\n                infected: false,\n                locations :[],\n            })\n        })\n    }*/\n    return (\n        <div>\n            <header>\n                <Nav/>\n            </header>\n            <div className=\"section\">\n                <div className=\"col-md-9 offset-md-1\">\n                    <FilterUsers>\n                        <div>\n                            <div className=\"row\">\n                                <div className=\"col-md-0\"/>\n                                <div className=\"col-md-13\">\n                                    <FilteredUsersTable/>\n                                </div>\n                            </div>\n                        </div>\n                    </FilterUsers>\n                </div>\n            </div>\n        </div>\n\n\n    )\n}\n\nexport default FiliationPage;\n","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/firebase/config.tsx",[],"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/classes/User.tsx",[],"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/components/NavBar.tsx",[],"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/components/FilteredUsersTable.tsx",["58","59"],"import React, {createContext, useContext, useEffect, useState} from 'react';\nimport {db} from \"../firebase/config\"\nimport {UserContext} from \"./FilterUsers\";\nimport FindContacts from \"./ContactsTable\";\nimport 'materialize-css';\nimport {User} from \"../classes/User\";\nimport {Button, Table} from \"react-bootstrap\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./style.css\";\n\nexport const LocationContext  = createContext(undefined as any);\nexport default function FilteredUsersTable() {\n\n    let formInputs = useContext(UserContext);\n\n    const [users, setUsers] = useState(Array<User>());\n    useEffect(() => {\n        const userSnap = db.collection(\"Users\").withConverter(User.userConverter).get();\n\n        userSnap.then((querySnapshot) => {\n            let userArr = Array<User>();\n            querySnapshot.forEach((doc) => {\n                const user =  doc.data();\n                userArr.push(user);\n            });\n            setUsers(userArr);\n\n        }).catch((error) => {\n            console.log(\"Error getting document:\", error);\n        });\n    }, []);\n    \n\n    const [indexes, setIndexes] = useState(Array<number>());\n    useEffect(() => {\n        let indexArr = Array<number>();\n        users.forEach(u => {\n            if (u.getName() === formInputs.name || u.getSurname() === formInputs.surname || u.getEmail() === formInputs.email) {\n                if(formInputs.surname ===\"\")\n                    indexArr.push(users.indexOf(u));\n                else\n                    if(u.getSurname() === formInputs.surname)\n                        indexArr.push(users.indexOf(u));\n            }\n        });\n\n        setIndexes(indexArr);\n    }, [formInputs]);\n\n    const [ourUser, setOurUser] = useState(new User(\"\",\"\",\"\",\"\",false));\n\n    let saveUser = (index: number) => {\n        setOurUser(users[index]);\n    }\n    const [day, setDay] = useState(2);\n    const getDay = (e : any) => {\n        let dayValue = e.target.value;\n        setDay(dayValue);\n\n    };\n    return(\n        <div>\n            <div>\n                <h3>User List</h3>\n                <table id=\"UserTable\">\n                    <thead>\n                        <tr >\n                            <th scope = \"col\">E-mail</th>\n                            <th scope = \"col\">Name</th>\n                            <th scope = \"col\">Surname</th>\n                            <th scope = \"col\">Past Number of Day</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {indexes.map((i, rowIndex) => {\n                        return <tr>\n                            <td> {\n                                users[i].getEmail()}</td>\n                            <td>{\n                                users[i].getName()}</td>\n                            <td>{\n                                users[i].getSurname()}\n                            </td>\n                            <td>\n                                <input className=\"form-control\"  onChange={getDay} name =\"day\" placeholder=\"day\" />\n                            </td>\n                            <td>\n                                <Button onClick={() => saveUser(i) }> Find Contacts </Button>\n                            </td>\n                        </tr>\n                    \n                    })}\n\n                    </tbody>\n                </table>\n            </div>\n            <LocationContext.Provider value={users} />\n            <FindContacts mUser={ourUser} allUsers ={users} mDay = {day}/>\n        </div>\n    )\n}","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/components/FilterUsers.tsx",[],"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/components/ContactsTable.tsx",["60","61"],"import React, {FC, ReactElement, useEffect, useState} from 'react';\nimport {UserLocation} from \"../classes/UserLocation\";\nimport {User} from \"../classes/User\";\nimport {Button, Table} from \"react-bootstrap\";\nimport {db} from \"../firebase/config\"\n\nconst degsToRads = (deg: number) => (deg * Math.PI) / 180.0;\nconst EARTH_RADIUS = 6371000; //in meters\n\n\n\ntype ChildProps = {\n    mUser: User,\n    allUsers: Array<User>,\n    mDay : number,\n}\n\n\nconst ContactsTable: FC<ChildProps> = ({mUser, allUsers ,mDay    }): ReactElement => {\n    const [contacts, setContacts] = useState(Array<User>());\n    const [day , setDay] = useState(2);\n    useEffect(()=>{\n        setDay(mDay)\n    },[mDay])\n    useEffect(() => {\n        let contactArr = Array<User>();\n\n        let mUserLocations = mUser.getLocations();\n        let mUserLocationsLength = mUserLocations.length;\n\n        \n\n        allUsers.forEach(comparedUser => {\n\n            if (mUser.getEmail() !== comparedUser.getEmail()) { // get rid of same user matching\n\n                let day = mDay ; // Get last 7 days Contacts\n                let seconds = day*86400; // convert day to seconds\n\n                let comparedUserLocations = comparedUser.getLocations();\n                let comparedUserLocationsLength = comparedUserLocations.length;\n\n                //According to the past days parameter, Take the location  in specific interval between [(today-pastDay)- today]\n                let today=new Date().getTime() / 1000;  // it returns today as sec\n                let startTimeInterval = today - seconds;\n\n                let k;\n                for(k=1;k< mUserLocationsLength;k++){\n            \n                    if(checkTimeInterval(mUserLocations[k],startTimeInterval)) break;                        \n                        \n                }\n\n                for (let i = k; i < mUserLocationsLength; i++) { //starts from k th index which is first index of User for desired time interval\n\n                    if (mUserLocationsLength > 3) {\n                        let mUserLocation = mUserLocations[i];\n\n                        let l;\n                        for(l=1;l<comparedUserLocationsLength;l++){\n                            if(checkTimeInterval(comparedUserLocations[l],startTimeInterval)) break;\n                        }\n\n                        for (let j = l; j < comparedUserLocationsLength; j++) { // starts from l th index which is first index of ComparedUser  for desired time interval\n                            if (comparedUserLocationsLength > 3) {\n\n                                //COMPARE TWO LOCATIONS\n                                let comparedUserLocation = comparedUserLocations[j];\n\n\n                                let distance = calculateDistance(comparedUserLocation, mUserLocation);\n                                let isTimeViolated = isAtTheSameTime(comparedUserLocation, mUserLocation);\n\n                                // If two location close each other with 5m at the same time\n                                if (distance < 5 && isTimeViolated) {\n                                    let locationBefore = comparedUserLocations[j - 1];\n                                    let locationAfter = comparedUserLocations[j + 1];\n\n                                    // get comparedUser before and after location distances\n                                    let distanceBefore = calculateDistance(locationBefore, mUserLocation);\n                                    let distanceAfter = calculateDistance(locationAfter, mUserLocation);\n\n                                    // get mUser before and after location distances\n                                    //let userDistanceBefore = calculateDistance(locationData[i], locationData[i - 1]);\n                                    //let userDistanceAfter = calculateDistance(locationData[i], locationData[i + 1]);\n\n                                    if ((distanceBefore < 5 && distanceAfter < 5) /*&& (userDistanceAfter < 5 && userDistanceBefore < 5)*/) {\n                                        let altitudeBetween = calculateAltitude(comparedUserLocation, mUserLocation);\n                                        if (altitudeBetween < 3) {\n                                            //console.log(myUserData[j])\n                                            contactArr.push(comparedUser)\n                                            //i = locationData.length;\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n\n        })\n\n        setContacts(contactArr);\n    }, [mUser])\n\n    let sendNotification = (contacts : Array<User>) => {\n        var namesAndSurnames =[];\n        var emails =[];\n        for(var i =0 ; i<contacts.length ; i++){\n            namesAndSurnames.push(contacts[i].getName()+\" \" + contacts[i].getSurname());\n            emails.push(contacts[i].getEmail())\n        }\n        emails.forEach(email =>{\n            db.collection(\"Users\").doc(email).update({\n                \"isRisky\" : true\n            }).then(function() {\n                console.log(\"Document successfully updated!\");\n            });\n        })\n\n        alert(\"NOTIFY USER \" + namesAndSurnames );\n    }\n\n    return (\n        <div>\n            <h4>Contacts</h4>\n            <Table id =\"UserTable\" size=\"sm\">\n                <thead>\n                <th>Email</th>\n                <th>Name</th>\n                <th>Surname</th>\n                </thead>\n\n                <tbody>\n                {contacts.map((contactUser) => {\n                    return <tr>\n                        <td> {\n                            contactUser.getEmail()}</td>\n                        <td>{\n                            contactUser.getName()}</td>\n                        <td>{\n                            contactUser.getSurname()}</td>\n\n                    </tr>\n\n                })}<tr>\n                    <td>\n                    <Button onClick={() => sendNotification(contacts)}>Send Notification </Button>\n                    </td>\n                    <td>\n                    <input className=\"form-control\"  name =\"age\" placeholder=\"Age Filter\" />\n                    </td>\n                </tr> \n                </tbody>\n            </Table>\n        </div>\n    )\n}\n\nexport default ContactsTable;\n\nfunction checkTimeInterval(location: UserLocation,startingTime: number):any{\n\n\n    if(location.time>startingTime){\n        return true;\n    }\n    else{\n         return false;\n        }\n\n}\n\nfunction calculateDistance(location1: UserLocation, location2: UserLocation): number {\n\n    //convert latitutes and longitudes to radians\n    let lat1 = degsToRads(location1.latitude);\n    let lng1 = degsToRads(location1.latitude);\n    let lat2 = degsToRads(location2.latitude);\n    let lng2 = degsToRads(location2.latitude);\n    \n\n\n    //haversine formula\n    let dlat = lat2 - lat1;\n    let dlon = lng2 - lng1;\n\n    let a = Math.pow(Math.sin(dlat / 2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(dlon / 2), 2);\n\n    let c = 2 * Math.asin(Math.sqrt(a));\n    return c * EARTH_RADIUS;\n}\n\nfunction calculateAltitude(location1: UserLocation, location2: UserLocation): number {\n\n    let altitude1 = location1.altitude;\n    let altitude2 = location2.altitude;\n\n    return Math.abs(altitude1 - altitude2);\n}\n\n// Violated time was set as 120 sec!!\nfunction isAtTheSameTime(location1: UserLocation, location2: UserLocation): boolean {\n    if (Math.abs(location1.time - location2.time) < 1200) {\n        //console.log(\"Time = \" + Math.abs(location1.time - location2.time));\n        return true;\n    } else {\n        return false;\n    }\n}",{"ruleId":"62","severity":1,"message":"63","line":6,"column":9,"nodeType":"64","messageId":"65","endLine":6,"endColumn":13},{"ruleId":"62","severity":1,"message":"66","line":11,"column":7,"nodeType":"64","messageId":"65","endLine":11,"endColumn":14},{"ruleId":"67","severity":1,"message":"68","line":3,"column":9,"nodeType":"64","messageId":"65","endLine":3,"endColumn":11},{"ruleId":"67","severity":1,"message":"69","line":6,"column":13,"nodeType":"64","messageId":"65","endLine":6,"endColumn":18},{"ruleId":"67","severity":1,"message":"70","line":7,"column":17,"nodeType":"64","messageId":"65","endLine":7,"endColumn":22},{"ruleId":"71","severity":1,"message":"72","line":48,"column":8,"nodeType":"73","endLine":48,"endColumn":20,"suggestions":"74"},{"ruleId":"67","severity":1,"message":"75","line":21,"column":12,"nodeType":"64","messageId":"65","endLine":21,"endColumn":15},{"ruleId":"71","severity":1,"message":"76","line":107,"column":8,"nodeType":"73","endLine":107,"endColumn":15,"suggestions":"77"},"no-unused-vars","'User' is defined but never used.","Identifier","unusedVar","'fetcher' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'db' is defined but never used.","'datas' is defined but never used.","'Table' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.","ArrayExpression",["78"],"'day' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allUsers' and 'mDay'. Either include them or remove the dependency array.",["79"],{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [formInputs, users]",{"range":"84","text":"85"},"Update the dependencies array to be: [allUsers, mDay, mUser]",{"range":"86","text":"87"},[1673,1685],"[formInputs, users]",[4726,4733],"[allUsers, mDay, mUser]"]
=======
<<<<<<< HEAD
[{"C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\index.tsx":"1","C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\App.tsx":"2","C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\pages\\clustermap.js":"3","C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\pages\\NotFoundPage.tsx":"4","C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\pages\\LoginPage.tsx":"5","C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\pages\\FiliationPage.tsx":"6","C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\components\\FilterUsers.tsx":"7","C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\firebase\\config.tsx":"8","C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\components\\FilteredUsersTable.tsx":"9","C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\components\\NavBar.tsx":"10","C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\components\\ContactsTable.tsx":"11","C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\classes\\User.tsx":"12"},{"size":218,"mtime":1621803078467,"results":"13","hashOfConfig":"14"},{"size":790,"mtime":1621965520397,"results":"15","hashOfConfig":"14"},{"size":4715,"mtime":1622940280763,"results":"16","hashOfConfig":"14"},{"size":171,"mtime":1621803078470,"results":"17","hashOfConfig":"14"},{"size":3297,"mtime":1621804605286,"results":"18","hashOfConfig":"14"},{"size":1428,"mtime":1623011683086,"results":"19","hashOfConfig":"14"},{"size":3077,"mtime":1622505413831,"results":"20","hashOfConfig":"14"},{"size":797,"mtime":1621803078466,"results":"21","hashOfConfig":"14"},{"size":3608,"mtime":1622934703175,"results":"22","hashOfConfig":"14"},{"size":1623,"mtime":1622936777213,"results":"23","hashOfConfig":"14"},{"size":7730,"mtime":1623021952052,"results":"24","hashOfConfig":"14"},{"size":2586,"mtime":1621803078458,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"29vdgg",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\index.tsx",[],["54","55"],"C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\App.tsx",[],"C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\pages\\clustermap.js",["56","57"],"import React, { useState, useRef, useEffect } from \"react\";\r\n//import useSwr from \"swr\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport useSupercluster from \"use-supercluster\";\r\nimport {db} from \"../firebase/config\"\r\nimport {User} from \"../classes/User\";\r\nimport \"../App.css\";\r\n\r\n\r\n\r\nconst fetcher = (...args) => fetch(...args).then(response => response.json());\r\n\r\nconst Marker = ({ children }) => children;\r\n\r\nexport default function DemoApp() {\r\n    const mapRef = useRef();\r\n    const [bounds, setBounds] = useState(null);\r\n    const [zoom, setZoom] = useState(10);\r\n    const [locations, setLocations] = useState([]);\r\n    useEffect( ()=>{\r\n        db.collection(\"Users\").get().then((querySnapshot) => {\r\n\r\n            const usersData = [];\r\n            querySnapshot.forEach((doc) => {\r\n                usersData.push({...doc.data(), id : doc.id})\r\n                // doc.data() is never undefined for query doc snapshot\r\n\r\n            });\r\n\r\n            setLocations(usersData);\r\n        });\r\n    },[])\r\n\r\n\r\n    const points = locations.map(user => ({\r\n        type: \"Feature\",\r\n        properties: { cluster: false, userId: user.id },\r\n        geometry: {\r\n            type: \"Point\",\r\n            coordinates: [\r\n                parseFloat(user.locations[user.locations.length-1].latitude),\r\n                parseFloat(user.locations[user.locations.length-1].longitude)\r\n            ]\r\n        }\r\n    }));\r\n    const { clusters, supercluster } = useSupercluster({\r\n        points,\r\n        bounds,\r\n        zoom,\r\n        options: { radius: 75, maxZoom: 20 }\r\n    });\r\n\r\n    return (\r\n        <div style={{ height: \"100vh\", width: \"100%\" }}>\r\n            <GoogleMapReact\r\n                googleMapURL={\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyA8nuKxeUQFlX2JEg_7NjQd1kUKs4r0LII\"}\r\n                defaultCenter={{ lat: 39.891480 , lng: 32.785450 }}\r\n                defaultZoom={10}\r\n                yesIWantToUseGoogleMapApiInternals\r\n                onGoogleApiLoaded={({ map }) => {\r\n                    mapRef.current = map;\r\n                }}\r\n                onChange={({ zoom, bounds }) => {\r\n                    setZoom(zoom);\r\n                    setBounds([\r\n                        bounds.nw.lng,\r\n                        bounds.se.lat,\r\n                        bounds.se.lng,\r\n                        bounds.nw.lat\r\n                    ]);\r\n                }}\r\n            >\r\n                {clusters.map(cluster => {\r\n                    const [longitude, latitude] = cluster.geometry.coordinates;\r\n                    const {\r\n                        cluster: isCluster,\r\n                        point_count: pointCount\r\n                    } = cluster.properties;\r\n\r\n                    if (isCluster) {\r\n                        return (\r\n                            <Marker\r\n                                key={locations.id}\r\n                                lat={latitude}\r\n                                lng={longitude}\r\n                            >\r\n                                <div\r\n                                    className=\"cluster-marker\"\r\n                                    style={{\r\n                                        width: `${10 + (pointCount / points.length) * 20}px`,\r\n                                        height: `${10 + (pointCount / points.length) * 20}px`\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        const expansionZoom = Math.min(\r\n                                            supercluster.getClusterExpansionZoom(cluster.id),\r\n                                            20\r\n                                        );\r\n                                        mapRef.current.setZoom(expansionZoom);\r\n                                        mapRef.current.panTo({ lat: latitude, lng: longitude });\r\n                                    }}\r\n                                >\r\n                                    {pointCount}\r\n                                </div>\r\n                            </Marker>\r\n                        );\r\n                    }\r\n\r\n                    return (\r\n                        <Marker\r\n                            key={locations.id}\r\n                            lat={latitude}\r\n                            lng={longitude}\r\n                        >\r\n                            <button className=\"user-locations\">\r\n                                <img src=\"/mark.png\" alt=\"user-locations\" />\r\n                            </button>\r\n                        </Marker>\r\n                    );\r\n                })}\r\n            </GoogleMapReact>\r\n        </div>\r\n    );\r\n}\r\n",["58","59"],"C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\pages\\NotFoundPage.tsx",[],"C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\pages\\LoginPage.tsx",[],"C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\pages\\FiliationPage.tsx",["60","61"],"C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\components\\FilterUsers.tsx",[],"C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\firebase\\config.tsx",[],"C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\components\\FilteredUsersTable.tsx",["62","63"],"import React, {createContext, useContext, useEffect, useState} from 'react';\r\nimport {db} from \"../firebase/config\"\r\nimport {UserContext} from \"./FilterUsers\";\r\nimport FindContacts from \"./ContactsTable\";\r\nimport 'materialize-css';\r\nimport {User} from \"../classes/User\";\r\nimport {Button, Table} from \"react-bootstrap\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport const LocationContext  = createContext(undefined as any);\r\nexport default function FilteredUsersTable() {\r\n\r\n    let formInputs = useContext(UserContext);\r\n\r\n    const [users, setUsers] = useState(Array<User>());\r\n    useEffect(() => {\r\n        const userSnap = db.collection(\"Users\").withConverter(User.userConverter).get();\r\n\r\n        userSnap.then((querySnapshot) => {\r\n            let userArr = Array<User>();\r\n            querySnapshot.forEach((doc) => {\r\n                const user =  doc.data();\r\n                userArr.push(user);\r\n            });\r\n            setUsers(userArr);\r\n\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }, []);\r\n\r\n\r\n    const [indexes, setIndexes] = useState(Array<number>());\r\n    useEffect(() => {\r\n        let indexArr = Array<number>();\r\n        users.forEach(u => {\r\n            if (u.getName() === formInputs.name || u.getSurname() === formInputs.surname || u.getEmail() === formInputs.email) {\r\n                if(formInputs.surname ===\"\")\r\n                    indexArr.push(users.indexOf(u));\r\n                else\r\n                    if(u.getSurname() === formInputs.surname)\r\n                        indexArr.push(users.indexOf(u));\r\n            }\r\n        });\r\n\r\n        setIndexes(indexArr);\r\n    }, [formInputs]);\r\n\r\n    const [ourUser, setOurUser] = useState(new User(\"\",\"\",\"\",\"\",false));\r\n\r\n    let saveUser = (index: number) => {\r\n        setOurUser(users[index]);\r\n    }\r\n    const [day, setDay] = useState(2);\r\n    const getDay = (e : any) => {\r\n        let dayValue = e.target.value;\r\n        setDay(dayValue);\r\n\r\n    };\r\n    return(\r\n        <div>\r\n            <div>\r\n                <h3>User List</h3>\r\n                <table id=\"UserTable\">\r\n                    <thead>\r\n                        <tr >\r\n                            <th scope = \"col\">E-mail</th>\r\n                            <th scope = \"col\">Name</th>\r\n                            <th scope = \"col\">Surname</th>\r\n                            <th scope = \"col\">Past Number of Day</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {indexes.map((i, rowIndex) => {\r\n                        return <tr>\r\n                            <td> {\r\n                                users[i].getEmail()}</td>\r\n                            <td>{\r\n                                users[i].getName()}</td>\r\n                            <td>{\r\n                                users[i].getSurname()}\r\n                            </td>\r\n                            <td>\r\n                                <input className=\"form-control\"  onChange={getDay} name =\"day\" placeholder=\"day\" />\r\n                            </td>\r\n                            <td>\r\n                                <Button onClick={() => saveUser(i) }> Find Contacts </Button>\r\n                            </td>\r\n                        </tr>\r\n                    \r\n                    })}\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <LocationContext.Provider value={users} />\r\n            <FindContacts mUser={ourUser} allUsers ={users} mDay = {day}/>\r\n        </div>\r\n    )\r\n}","C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\components\\NavBar.tsx",[],"C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\components\\ContactsTable.tsx",["64","65"],"C:\\Users\\fuate\\WebstormProjects\\Command-Panel\\auto-filiation\\src\\classes\\User.tsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":6,"column":9,"nodeType":"72","messageId":"73","endLine":6,"endColumn":13},{"ruleId":"70","severity":1,"message":"74","line":11,"column":7,"nodeType":"72","messageId":"73","endLine":11,"endColumn":14},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"75","severity":1,"message":"76","line":3,"column":9,"nodeType":"72","messageId":"73","endLine":3,"endColumn":11},{"ruleId":"75","severity":1,"message":"77","line":6,"column":13,"nodeType":"72","messageId":"73","endLine":6,"endColumn":18},{"ruleId":"75","severity":1,"message":"78","line":7,"column":17,"nodeType":"72","messageId":"73","endLine":7,"endColumn":22},{"ruleId":"79","severity":1,"message":"80","line":47,"column":8,"nodeType":"81","endLine":47,"endColumn":20,"suggestions":"82"},{"ruleId":"75","severity":1,"message":"83","line":21,"column":12,"nodeType":"72","messageId":"73","endLine":21,"endColumn":15},{"ruleId":"79","severity":1,"message":"84","line":107,"column":8,"nodeType":"81","endLine":107,"endColumn":15,"suggestions":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'User' is defined but never used.","Identifier","unusedVar","'fetcher' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'db' is defined but never used.","'datas' is defined but never used.","'Table' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.","ArrayExpression",["88"],"'day' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'allUsers'. Either include it or remove the dependency array.",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [formInputs, users]",{"range":"94","text":"95"},"Update the dependencies array to be: [allUsers, mUser]",{"range":"96","text":"97"},[1693,1705],"[formInputs, users]",[4834,4841],"[allUsers, mUser]"]
=======
[{"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/index.tsx":"1","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/App.tsx":"2","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/pages/clustermap.js":"3","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/pages/LoginPage.tsx":"4","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/pages/NotFoundPage.tsx":"5","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/pages/FiliationPage.tsx":"6","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/firebase/config.tsx":"7","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/classes/User.tsx":"8","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/components/NavBar.tsx":"9","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/components/FilteredUsersTable.tsx":"10","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/components/FilterUsers.tsx":"11","/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/components/ContactsTable.tsx":"12"},{"size":204,"mtime":1622750746056,"results":"13","hashOfConfig":"14"},{"size":767,"mtime":1622750746045,"results":"15","hashOfConfig":"14"},{"size":4800,"mtime":1623141903228,"results":"16","hashOfConfig":"14"},{"size":3209,"mtime":1622750746058,"results":"17","hashOfConfig":"14"},{"size":160,"mtime":1622750746059,"results":"18","hashOfConfig":"14"},{"size":1382,"mtime":1623022139687,"results":"19","hashOfConfig":"14"},{"size":772,"mtime":1622750746056,"results":"20","hashOfConfig":"14"},{"size":2495,"mtime":1622750746045,"results":"21","hashOfConfig":"14"},{"size":1579,"mtime":1623016328696,"results":"22","hashOfConfig":"14"},{"size":3535,"mtime":1623020637190,"results":"23","hashOfConfig":"14"},{"size":3006,"mtime":1622750752151,"results":"24","hashOfConfig":"14"},{"size":7766,"mtime":1623019591700,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"etyjnz",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/index.tsx",[],"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/App.tsx",[],"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/pages/clustermap.js",["50","51"],"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/pages/LoginPage.tsx",[],"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/pages/NotFoundPage.tsx",[],"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/pages/FiliationPage.tsx",["52","53"],"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/firebase/config.tsx",[],"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/classes/User.tsx",[],"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/components/NavBar.tsx",[],"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/components/FilteredUsersTable.tsx",["54","55"],"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/components/FilterUsers.tsx",[],"/Users/tarik/Desktop/Fuat-CommandPanel/auto-filiation/src/components/ContactsTable.tsx",["56","57"],{"ruleId":"58","severity":1,"message":"59","line":6,"column":9,"nodeType":"60","messageId":"61","endLine":6,"endColumn":13},{"ruleId":"58","severity":1,"message":"62","line":11,"column":7,"nodeType":"60","messageId":"61","endLine":11,"endColumn":14},{"ruleId":"63","severity":1,"message":"64","line":3,"column":9,"nodeType":"60","messageId":"61","endLine":3,"endColumn":11},{"ruleId":"63","severity":1,"message":"65","line":6,"column":13,"nodeType":"60","messageId":"61","endLine":6,"endColumn":18},{"ruleId":"63","severity":1,"message":"66","line":7,"column":17,"nodeType":"60","messageId":"61","endLine":7,"endColumn":22},{"ruleId":"67","severity":1,"message":"68","line":48,"column":8,"nodeType":"69","endLine":48,"endColumn":20,"suggestions":"70"},{"ruleId":"63","severity":1,"message":"71","line":21,"column":12,"nodeType":"60","messageId":"61","endLine":21,"endColumn":15},{"ruleId":"67","severity":1,"message":"72","line":107,"column":8,"nodeType":"69","endLine":107,"endColumn":15,"suggestions":"73"},"no-unused-vars","'User' is defined but never used.","Identifier","unusedVar","'fetcher' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'db' is defined but never used.","'datas' is defined but never used.","'Table' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.","ArrayExpression",["74"],"'day' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allUsers' and 'mDay'. Either include them or remove the dependency array.",["75"],{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [formInputs, users]",{"range":"80","text":"81"},"Update the dependencies array to be: [allUsers, mDay, mUser]",{"range":"82","text":"83"},[1673,1685],"[formInputs, users]",[4726,4733],"[allUsers, mDay, mUser]"]
>>>>>>> e87bdf07755c39a1348c544a1e86dae0fd849e55
>>>>>>> 8581c1039b4ff9b5e4630980ffda99f93bb403ec
